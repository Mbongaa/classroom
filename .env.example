# 1. Copy this file and rename it to .env.local
# 2. Update the enviroment variables below.

# REQUIRED SETTINGS
# ################# 
# If you are using LiveKit Cloud, the API key and secret can be generated from the Cloud Dashboard.
LIVEKIT_API_KEY=
LIVEKIT_API_SECRET=
# URL pointing to the LiveKit server. (example: `wss://my-livekit-project.livekit.cloud`)
LIVEKIT_URL=


# OPTIONAL SETTINGS
# #################
# Recording Storage (Required for recording feature)
# RECOMMENDED: Use Cloudflare R2 (S3-compatible, FREE tier, zero egress fees)
# Get R2 credentials: https://dash.cloudflare.com/ → R2 → Manage R2 API Tokens
S3_ACCESS_KEY=
S3_SECRET_KEY=
S3_BUCKET=livekit-recordings
S3_REGION=auto                    # For R2 use "auto", for AWS use region like "us-east-1"
S3_ENDPOINT=                      # For R2: https://your-account-id.r2.cloudflarestorage.com
                                  # For AWS: leave empty or use custom endpoint

# R2 Public Domain (REQUIRED for video playback)
# Get from: R2 Dashboard → Your Bucket → Settings → Public Access
# After enabling, you'll get a r2.dev URL or can use custom domain
# Example: https://pub-xxxxx.r2.dev or https://recordings.yourdomain.com
R2_PUBLIC_DOMAIN=

# PUBLIC
# Uncomment settings menu when using a LiveKit Cloud, it'll enable Krisp noise filters.
# NEXT_PUBLIC_SHOW_SETTINGS_MENU=true
# NEXT_PUBLIC_LK_RECORD_ENDPOINT=/api/record

# Optional, to pipe logs to datadog
# NEXT_PUBLIC_DATADOG_CLIENT_TOKEN=client-token
# NEXT_PUBLIC_DATADOG_SITE=datadog-site

# SUPABASE SETTINGS
# #################
# Supabase project URL (example: `https://your-project-ref.supabase.co`)
NEXT_PUBLIC_SUPABASE_URL=
# Supabase anonymous/public key (found in Project Settings > API)
NEXT_PUBLIC_SUPABASE_ANON_KEY=

# TRANSLATION SETTINGS
# #################
# Google Gemini API key for multilingual question translation
# Get your key from: https://aistudio.google.com/apikey
GEMINI_API_KEY=

