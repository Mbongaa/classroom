.classroomContainer {
  /* Modern viewport height with Safari fallbacks */
  height: 100vh; /* Fallback for older browsers */
  height: 100svh; /* Small viewport height (mobile with address bar) */
  height: -webkit-fill-available; /* Safari-specific fix */

  /* Prevent ANY scrolling */
  overflow: hidden;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;

  display: flex;
  flex-direction: column;
  background-color: var(--lk-background);
}

/* Override LiveKit theme variables to unify the color scheme */
.classroomContainer[data-lk-theme='default'] {
  --lk-bg2: var(--lk-background); /* Make secondary background use the same dark color */
}

/* Fixed header at the top - responsive height */
.header {
  /* Responsive height with bounds */
  height: 8vh;
  min-height: 40px;
  max-height: 60px;

  background: var(--lk-bg);
  border-bottom: 1px solid var(--lk-bg3, rgba(255, 255, 255, 0.1));
  display: flex;
  align-items: center;
  padding: 0 20px;
  z-index: 100;
  flex-shrink: 0;
}

.headerContent {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.roomInfo {
  display: flex;
  align-items: center;
  gap: 20px;
  color: var(--lk-text1, white);
}

.roomName {
  /* Responsive font size */
  font-size: clamp(0.875rem, 2vw, 1.25rem);
  font-weight: 700;
  color: var(--lk-text1, white);
  letter-spacing: -0.03rem;
}

.headerControls {
  display: flex;
  align-items: center;
  gap: 12px;
}

.copyLinkButton {
  width: 36px;
  height: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--lk-bg);
  border: 1px solid transparent;
  border-radius: 8px;
  color: var(--lk-text1, white);
  cursor: pointer;
  transition: all 0.2s ease;
  outline: none;
  position: relative;
}

.copyLinkButton:hover {
  background: var(--lk-bg2);
  border-color: transparent;
  transform: translateY(-1px);
}

.copyLinkButton:focus,
.copyLinkButton:focus-visible {
  box-shadow:
    0 0 0 1px #b8b2b2,
    0 0 0 5px #434549;
}

.copyLinkButton:active {
  transform: translateY(0);
  background: var(--lk-bg3);
}

.copyLinkButton.copied {
  background: var(--lk-bg);
  border-color: var(--lk-text2, #6b7280);
  animation: copySuccess 0.3s ease;
  box-shadow:
    0 0 0 1px #b8b2b2,
    0 0 0 5px #434549;
}

@keyframes copySuccess {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

/* Raise hand button in header - same style as copyLinkButton */
.raiseHandButton {
  width: 36px;
  height: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--lk-bg);
  border: 1px solid transparent;
  border-radius: 8px;
  color: var(--lk-text1, white);
  cursor: pointer;
  transition: all 0.2s ease;
  outline: none;
  position: relative;
}

.raiseHandButton:hover:not(:disabled) {
  background: var(--lk-bg2);
  border-color: transparent;
  transform: translateY(-1px);
}

.raiseHandButton:focus,
.raiseHandButton:focus-visible {
  box-shadow:
    0 0 0 1px #b8b2b2,
    0 0 0 5px #434549;
}

.raiseHandButton:active:not(:disabled) {
  transform: translateY(0);
  background: var(--lk-bg3);
}

.raiseHandButton.active {
  background: var(--lk-bg);
  border-color: var(--lk-text2, #6b7280);
  box-shadow:
    0 0 0 1px #b8b2b2,
    0 0 0 5px #434549;
  animation: pulse 2s ease-in-out infinite;
}

.raiseHandButton:disabled {
  opacity: 0.7;
  cursor: not-allowed;
}

@keyframes pulse {
  0%,
  100% {
    opacity: 0.7;
  }
  50% {
    opacity: 1;
  }
}

/* Main container with column layout - fully flexible */
.mainContainer {
  flex: 1;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  position: relative;
  min-height: 0; /* Critical for flexbox shrinking */
}

/* Video area - contains teacher video and sidebars */
.videoArea {
  flex: 1;
  display: flex;
  flex-direction: row;
  overflow: hidden;
  position: relative;
  min-height: 0; /* Allow shrinking */
}

/* Main Video Section - Teacher and Speaking Students */
.mainVideoSection {
  flex: 1;
  background: var(--lk-background-2);
  border-radius: 8px;
  overflow: hidden; /* Prevent scrolling */
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0.5rem 1rem 0 1rem; /* Reduced top margin due to header */
  min-height: 0; /* Allow shrinking */
}

/* Grid layout for teacher and speaking students */
.mainVideoGrid {
  width: 100%;
  height: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  padding: 1rem;
  box-sizing: border-box;
}

/* Base tile styles - squares based on height */
.mainVideoGrid > * {
  flex: 0 0 auto;
  display: flex;
  align-items: center;
  justify-content: center;
  aspect-ratio: 1; /* Force square aspect ratio */
}

/* Override square aspect ratio for screen shares - allow natural aspect */
.mainVideoGrid > .teacherScreenShareLayout {
  aspect-ratio: auto !important;
  width: 100% !important;
  height: 100% !important;
  max-width: none !important;
  max-height: none !important;
}

/* Single participant - large square based on container height */
.mainVideoGrid:has(> :only-child) > * {
  --tile-size: min(calc(100% - 2rem), calc(100svh - 250px));
  width: var(--tile-size);
  height: var(--tile-size);
}

/* 2 participants - squares that fit side by side */
.mainVideoGrid:has(> :nth-child(2):last-child) > * {
  --tile-size: min(calc(50% - 1rem), calc(100svh - 250px));
  width: var(--tile-size);
  height: var(--tile-size);
}

/* 3-4 participants - squares in 2x2 grid */
.mainVideoGrid:has(> :nth-child(3)):not(:has(> :nth-child(5))) > * {
  --tile-size: min(calc(45% - 1rem), calc(50svh - 125px));
  width: var(--tile-size);
  height: var(--tile-size);
}

/* 5+ participants - smaller squares */
.mainVideoGrid:has(> :nth-child(5)) > * {
  --tile-size: min(calc(30% - 1rem), calc(33vh - 80px));
  width: var(--tile-size);
  height: var(--tile-size);
}

/* Teacher Section - Large Video */
.teacherSection {
  flex: 1;
  background: var(--lk-background-2);
  border-radius: 8px;
  overflow: hidden;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 1rem 1rem 0 1rem; /* Remove bottom margin to fix alignment */
  min-height: 0; /* Allow shrinking */
}

.teacherVideo,
.speakingStudentVideo {
  /* Size is controlled by parent grid rules */
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 24px;
  background: var(--lk-background);
}

/* Speaking student video - no special border, LiveKit handles speaking indicator */
.speakingStudentVideo {
  /* Using same styling as teacher video, LiveKit will add speaking indicator */
}

.teacherTrack {
  width: 100%;
  height: 100%;
  position: relative;
}

.teacherTile,
.speakerTile {
  width: 100%;
  height: 100%;
  position: relative;
}

/* LiveKit's native .lk-speaking class will handle the speaking indicator automatically */
/* No custom override needed - will use LiveKit's default blue indicator */

.videoTrack {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.roleBadge {
  position: absolute;
  top: 1rem;
  left: 1rem;
  background: rgba(76, 175, 80, 0.9);
  color: var(--lk-text1, white);
  padding: 0.5rem 1rem;
  border-radius: 20px;
  font-size: 0.9rem;
  font-weight: bold;
  z-index: 10;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.participantName {
  position: absolute;
  bottom: 1rem;
  left: 1rem;
  background: rgba(0, 0, 0, 0.7);
  color: var(--lk-text1, white);
  padding: 0.5rem 1rem;
  border-radius: 4px;
  font-size: 0.9rem;
}

.noVideoPlaceholder {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  color: var(--lk-text1, white);
}

.avatarPlaceholder {
  font-size: 5rem;
  opacity: 0.7;
}

.noVideoText {
  color: var(--lk-text-muted);
  font-size: 0.9rem;
}

.waitingForTeacher {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  color: var(--lk-text-muted);
}

.waitingIcon {
  font-size: 3rem;
  animation: pulse 2s infinite;
}

.waitingText {
  font-size: 1.1rem;
}

/* Translation Sidebar - Similar to chat but on left side */
.translationSidebar {
  min-width: 250px;
  max-width: 600px;
  background: var(--lk-background-2);
  border-right: 1px solid var(--lk-border);
  flex-direction: column;
  height: 100%;
  flex-shrink: 0;
  position: relative;
  transition: width 0.1s ease-out;
}

.translationHeader {
  padding: 1rem;
  border-bottom: 1px solid var(--lk-border);
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.translationTitle {
  font-size: 1rem;
  font-weight: 600;
  color: var(--lk-text1, white);
  margin: 0;
}

.translationCloseButton {
  background: none;
  border: none;
  color: var(--lk-text1, white);
  cursor: pointer;
  font-size: 1.5rem;
  padding: 0;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 4px;
  transition: background-color 0.2s;
}

.translationCloseButton:hover {
  background-color: var(--lk-background);
}

.translationContent {
  flex: 1;
  overflow-y: auto;
  padding: 1rem;
}

.translationPlaceholder {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  text-align: center;
  color: var(--lk-text-muted);
}

.translationEmptyIcon {
  font-size: 3rem;
  opacity: 0.5;
  margin-bottom: 1rem;
}

.translationEmptyText {
  font-size: 0.95rem;
  margin: 0 0 0.5rem;
}

.translationComingSoon {
  font-size: 0.85rem;
  opacity: 0.7;
  font-style: italic;
}

/* Resize Handle - positioned at middle of right edge */
.resizeHandle {
  position: absolute;
  top: 50%;
  right: 0;
  transform: translateY(-50%);
  width: 24px;
  height: 48px;
  cursor: ew-resize;
  background: transparent;
  z-index: 10;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 4px 0 0 4px;
  transition: background 0.2s ease;
}

.resizeHandle:hover {
  background: rgba(255, 255, 255, 0.1);
}

.resizeGrip {
  color: var(--lk-text2, rgba(128, 128, 128, 0.6));
  transition: color 0.2s ease;
}

.resizeHandle:hover .resizeGrip {
  color: var(--lk-text1, rgba(128, 128, 128, 0.8));
}

/* Students Section - Fixed at bottom */
.studentsSection {
  /* Responsive height with bounds */
  height: 15vh;
  min-height: 80px;
  max-height: 150px;

  background: var(--lk-background-2);
  border-top: 1px solid var(--lk-border);
  padding: 0.5rem;
  overflow: hidden; /* Hide overflow to prevent scrolling */
  flex-shrink: 1; /* Allow shrinking when needed */
}

.sectionHeader {
  margin-bottom: 0.5rem; /* Reduced margin */
  padding-bottom: 0; /* Remove bottom padding */
  border-bottom: 1px solid var(--lk-border);
}

.sectionHeader h3 {
  margin: 0;
  font-size: 1rem;
  color: var(--lk-text1, white);
}

.studentsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(80px, 1fr)); /* Smaller minimum width */
  gap: 0.5rem;
  overflow-y: auto;
  overflow-x: hidden; /* Hide horizontal overflow */
  max-height: calc(100% - 30px); /* Account for smaller header */
  padding-right: 10px; /* Add padding for scrollbar */
}

.studentTile {
  aspect-ratio: 1; /* Square for avatar */
  background: var(--lk-background);
  border-radius: 6px;
  overflow: hidden; /* Prevent content overflow - dropdown uses portal */
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  max-height: 80px; /* Reduced height */
  transition: all 0.3s ease;
  border: 2px solid transparent;
}

/* Speaking student - no special highlighting, using LiveKit's native indicator instead */

.studentBadge {
  position: absolute;
  top: 0.25rem;
  left: 0.25rem;
  background: rgba(33, 150, 243, 0.9);
  color: var(--lk-text1, white);
  padding: 0.25rem 0.5rem;
  border-radius: 12px;
  font-size: 0.75rem;
  z-index: 20;
}

/* Speaking student badge - shows microphone icon */
.studentTile.speaking .studentBadge {
  background: rgba(33, 150, 243, 0.9); /* Blue instead of green */
  animation: pulse 2s infinite;
}

/* Removed speaking students section - now using unified grid with highlighting */

.studentVideo {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.studentNoVideo {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  padding: 0; /* Remove padding */
  background: var(--lk-background);
}

.studentAvatar {
  font-size: 2rem;
  opacity: 0.5;
}

.studentName {
  position: absolute;
  bottom: 0.25rem;
  left: 0.25rem;
  right: 0.25rem;
  background: var(--lk-bg, rgba(0, 0, 0, 0.7));
  color: var(--lk-text1, white);
  padding: 0.25rem 0.5rem;
  border-radius: 3px;
  font-size: 0.75rem;
  text-align: center;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  pointer-events: none;
}

.noStudents {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%; /* Fill available space without overflow */
  color: var(--lk-text-muted);
  font-size: 0.9rem;
}

/* Chat wrapper for resize functionality */
.chatWrapper {
  height: 100%;
  position: relative;
  flex-shrink: 0;
}

/* Chat Sidebar - LiveKit Chat component */
.chatSidebar {
  width: 100%;
  height: 100%;
}

/* Chat Resize Handle - positioned at middle of left edge */
.chatResizeHandle {
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
  width: 24px;
  height: 48px;
  cursor: ew-resize;
  background: transparent;
  z-index: 10;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 0 4px 4px 0;
  transition: background 0.2s ease;
}

.chatResizeHandle:hover {
  background: rgba(255, 255, 255, 0.1);
}

.chatResizeGrip {
  color: var(--lk-text2, rgba(128, 128, 128, 0.6));
  transition: color 0.2s ease;
}

.chatResizeHandle:hover .chatResizeGrip {
  color: var(--lk-text1, rgba(128, 128, 128, 0.8));
}

/* Let LiveKit Chat component use its native styling completely */

/* Control Bar */
.controlBar {
  position: relative;
  background: var(--lk-background-2);
  border-top: 1px solid var(--lk-border);
  padding: 5px;
  z-index: 50;
}

/* Desktop-only elements (hidden on mobile) */
.desktopOnly {
  display: flex;
}

/* Mobile translation panel (horizontal layout between video and students) */
.translationPanelMobile {
  display: none; /* Hidden by default */
  height: 50vh; /* 50% of viewport height */
  background: var(--lk-background-2);
  border-top: 1px solid var(--lk-border);
  border-bottom: 1px solid var(--lk-border);
  flex-shrink: 0;
  overflow: hidden;
  flex-direction: column;
}

/* Mobile Responsive */
@media (max-width: 768px) {
  /* Hide desktop-only elements on mobile */
  .desktopOnly {
    display: none !important;
  }

  /* Show mobile translation panel */
  .translationPanelMobile {
    display: flex;
  }
  .videoArea {
    min-height: 0;
  }

  .teacherSection {
    margin: 0.5rem;
  }

  /* Fix mobile video sizing - much larger on mobile! */
  .mainVideoGrid:has(> :only-child) > * {
    width: 80vw !important; /* 320px on 400px iPhone */
    height: 80vw !important; /* Square aspect ratio */
    max-width: 350px !important;
    max-height: 350px !important;
  }

  /* 2 participants on mobile */
  .mainVideoGrid:has(> :nth-child(2):last-child) > * {
    width: 45vw !important;
    height: 45vw !important;
    max-width: 200px !important;
    max-height: 200px !important;
  }

  /* 3+ participants on mobile */
  .mainVideoGrid:has(> :nth-child(3)) > * {
    width: 40vw !important;
    height: 40vw !important;
    max-width: 150px !important;
    max-height: 150px !important;
  }

  /* CONDITIONAL: When translation is active - fine-tuned camera tile sizes for sweet spot */
  .mainContainer.withTranslation .mainVideoGrid:has(> :only-child) > * {
    width: 45vw !important; /* Fine-tune: 50vw → 45vw */
    height: 45vw !important;
    max-width: 170px !important;
    max-height: 170px !important;
  }

  /* Override for screen share on mobile - use full available space */
  .mainVideoGrid > .teacherScreenShareLayout {
    width: 100% !important;
    height: 100% !important;
    max-width: none !important;
    max-height: none !important;
  }

  /* Ensure screen share remains visible with translation panel */
  .mainContainer.withTranslation .mainVideoGrid > .teacherScreenShareLayout {
    width: 100% !important;
    height: 100% !important;
    max-width: none !important;
    max-height: none !important;
  }

  .mainContainer.withTranslation .mainVideoGrid:has(> :nth-child(2):last-child) > * {
    width: 32vw !important; /* Fine-tune: 35vw → 32vw */
    height: 32vw !important;
    max-width: 130px !important;
    max-height: 130px !important;
  }

  .mainContainer.withTranslation .mainVideoGrid:has(> :nth-child(3)) > * {
    width: 28vw !important; /* Fine-tune: 30vw → 28vw */
    height: 28vw !important;
    max-width: 115px !important;
    max-height: 115px !important;
  }

  .translationSidebar {
    position: fixed;
    left: 0;
    top: 0;
    bottom: 0;
    width: 100%;
    max-width: 100%;
    z-index: 100;
  }

  .studentsSection {
    height: 110px; /* Compact on mobile */
    /* Fixed size to eliminate flex competition */
    flex: 0 0 110px;
    min-height: 80px;
    max-height: 120px;
  }

  /* Ensure main container uses proper flex layout for mobile panels */
  .mainContainer {
    gap: 0;
  }

  .videoArea {
    /* Reduce video area when translation panel is active */
    flex: 1;
    min-height: 200px;
  }

  .studentsGrid {
    grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
  }

  .studentTile {
    max-height: 60px; /* Smaller on mobile */
  }

  /* Fine-tune avatar size on mobile - slightly bigger for better visibility */
  .studentTile [class*='w-16'] {
    width: 44px !important; /* Fine-tune: 40px → 44px */
    height: 44px !important; /* Fine-tune: 40px → 44px */
  }

  /* Fine-tune initials font size */
  .studentTile [class*='text-xl'] {
    font-size: 1.1rem !important; /* Fine-tune: 1rem → 1.1rem */
  }

  /* Fine-tune student name proportionally */
  .studentName {
    bottom: -0.1rem !important; /* Fine-tune: 0rem → -0.1rem (slightly down) */
    font-size: 0.65rem !important; /* Fine-tune: 0.6rem → 0.65rem */
    padding: 0.2rem 0.4rem !important; /* Keep same padding */
  }

  /* Speaking students use LiveKit's native indicator on mobile too */

  .roleBadge {
    font-size: 0.8rem;
    padding: 0.3rem 0.6rem;
  }

  .chatWrapper {
    position: fixed !important;
    right: 0;
    top: 56px !important; /* Below header */
    bottom: 120px !important; /* Above control bar with extra clearance */
    width: 100% !important;
    height: auto !important; /* Override default height */
    z-index: 2500 !important; /* Above all components */
  }

  .chatResizeHandle {
    display: none; /* Hide resize handle on mobile */
  }
}

/* Force white text for participant names in all themes - fixes light mode visibility */
.participantName,
.studentName {
  color: white !important;
}

/* Also target LiveKit's native participant name classes */
.participantName .lk-participant-name,
.studentName .lk-participant-name,
[data-lk-theme] .participantName,
[data-lk-theme] .studentName {
  color: white !important;
}

/* Animations */
@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* Screen share layout styles */
.teacherScreenShareLayout {
  width: 100%;
  height: 100%;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}

.screenShareContainer {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.screenShareTile {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

/* Teacher camera thumbnail overlay when screen sharing */
.teacherCameraThumbnail {
  position: absolute;
  bottom: 20px;
  right: 20px;
  width: 200px;
  height: 150px;
  border-radius: 24px;
  overflow: hidden;
  background: var(--lk-background);
  border: 2px solid rgba(255, 255, 255, 0.2);
  z-index: 10;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
}

.teacherThumbnailTile {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* Mobile adjustments for screen share */
@media (max-width: 768px) {
  .teacherCameraThumbnail {
    width: 120px;
    height: 90px;
    bottom: 10px;
    right: 10px;
    border-radius: 16px;
  }
}

/* Very small viewport heights - prioritize video area */
@media (max-height: 500px) {
  .header {
    height: 40px;
    min-height: 40px;
    max-height: 40px;
  }

  .studentsSection {
    height: 60px;
    min-height: 60px;
    max-height: 60px;
  }

  .roomName {
    font-size: 0.875rem;
  }

  /* Hide less critical elements */
  .sectionHeader h3 {
    font-size: 0.75rem;
    margin: 0;
  }

  .studentTile {
    padding: 0.25rem;
  }
}

/* Extremely small viewports */
@media (max-height: 400px) {
  .studentsSection {
    /* Hide students section on very small screens to prioritize video */
    display: none;
  }
}
